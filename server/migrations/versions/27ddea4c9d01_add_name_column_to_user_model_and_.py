"""Add name column to User model and refine relationships for RBAC

Revision ID: 27ddea4c9d01
Revises: fefec9d79495
Create Date: 2025-07-23 12:48:07.545195

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '27ddea4c9d01'
down_revision = 'fefec9d79495'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        # 1. Add the column as nullable=True initially
        batch_op.add_column(sa.Column('name', sa.String(length=100), nullable=True))

    # 2. Update existing rows to set a default name (e.g., 'Unknown User')
    # This must be done outside batch_alter_table context if you need op.execute
    op.execute("UPDATE users SET name = 'Unknown User' WHERE name IS NULL")

    with op.batch_alter_table('users', schema=None) as batch_op:
        # 3. Alter the column to set nullable=False after updating existing data
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               nullable=False,
               existing_nullable=True) # Indicate that it was previously nullable

    with op.batch_alter_table('menu_items', schema=None) as batch_op:
        batch_op.add_column(sa.Column('orders_id', sa.Integer(), nullable=True)) # This line seems out of place, it might have been auto-generated.
                                                                                # If you did not explicitly intend to add 'orders_id' here,
                                                                                # and it's not a ForeignKey, you might want to remove this line
                                                                                # OR handle its nullable constraint if it needs one.
                                                                                # For now, let's assume it was part of auto-gen and keep it nullable for safety.
        batch_op.create_foreign_key(None, 'orders', ['orders_id'], ['id']) # This also might be auto-generated.
                                                                           # It implies a relationship from menu_items to orders, which might not be what you want.
                                                                           # Your `MenuItem` model had `orders = db.relationship('Order', ...)`
                                                                           # which implies `Order` has the foreign key `menu_item_id`.
                                                                           # Double-check if `orders_id` column should be here.
                                                                           # If the intent was for `MenuItem` to point to a specific order, that's unusual.
                                                                           # Usually, a MenuItem can be part of many Orders.

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('menu_items', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('orders_id')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('name')

    # ### end Alembic commands ###